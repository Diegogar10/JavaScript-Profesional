{"version":3,"sources":["assets/MediaPlayer.ts","assets/plugins/AutoPlay.ts","assets/plugins/AutoPause.ts","assets/index.ts"],"names":[],"mappings":";;;;;;AECA,ADCA,ICDA,KDCS,ICDT,IDCA,GAAiB;ADFjB,AECA,ADEI,EAAA,EDHJ,MCGY,CAAC,IDHb,KCGI,CAAmB,GAAnB,GAAuB,UAAS,MAAT,EAA2B;ADHtD,AECA,ADGQ,IAAA,MAAM,CAAC,CCHf,GDGQ;ADJR,AEKI,ADAI,IAAA,MAAM,CCAV,ADAW,CDLf,GCKQ,KCAJ,GAAA;AFDA,AEEI,ADAH,GAHD,MCGS,EFFT,OEEI,GAAiB,CFFrB,CAAY,EEER,IFFJ,EAAkB;AACd,AEEA,ADAP,SDFY,AEEA,KFFL,GAAa,MAAM,CAAC,EAApB,CEEA,GAA0B,KAAK,kBAAL,CAAwB,IAAxB,CAA6B,IAA7B,CAA1B;AFDA,AGNR,ADQQ,ICRR,KHMa,AEEA,OFFL,CGNR,EHMuB,CGNvB,KHM6B,CAAC,KEEtB,EFFe,CEEe,CCRtC,CAAA,CHMyC,EAAjC,AEEmC,ICR3C,CAAA,eAAA,CAAA,CAAA,ADQsC,CAA4B,IAA5B,CAAiC,IAAjC,CAA9B;AFDA,AEEH,ADAL,OAAA,CAAA,CDFa,MCEb,GAAe,EDFP,MCER;ADDK,AGPL,IAAA,UAAA,GAAA,eAAA,CAAA,OAAA,CAAA,oBAAA,CAAA,CAAA;ADSI,EAAA,SAAA,CAAA,SAAA,CAAA,GAAA,GAAA,UAAI,MAAJ,EAAU;AFDF,AGPZ,ADSQ,EFFI,EGPZ,KDSa,IFFD,CAAA,CGPZ,ADSQ,GCTR,ADSsB,KFFV,CAAA,AEEJ,SCTR,CAAA,CHOY,GAAR,GGPJ,CAAA,QHOI,aGPJ,CAAA,CAAA;AHOI,AEII,QFJJ,AEIU,KFJV,GAAA,AEIkB,GAAG,CFJrB,GEIyB,oBAAJ,CAAyB,KAAK,kBAA9B,EAAiD;ACT1E,ADUY,ICVN,EDUM,GCVD,GAAG,GDUO,EAAC,GCVA,CAAC,CDUI,YCVb,CAAuB,OAAvB,CAAd;AHMQ,AGLR,ADQ0E,ICRpE,CDQmB,CAAjB,GFHK,CGLD,GAAG,GHKP,CAAa,AGLF,OHKX,CAAqB,KGLV,CAAA,IHKU,GGLd,CAAgB,EHKF,EAAM;AACvB,AGLV,ADUM,ECVN,EAAE,ADUI,EFLI,AGLN,KADyB,CHMb,AEKF,CFLG,AEKF,GFLL,CAAW,GEKf,CAAiB,CFLb,IEKkB,MAAL,CAAY,KAA7B;AFJC,AGLP,ADUM,ECVN,EDUM,CFPA,IGHC,EAAE,CAAC,ADUI,CAAC,GCVD,UAAA,CAAA,EDUR,CAA0B,ICVtB,EAAD,EAAiB,IAAI,MDUxB,EAA6C,GCVrB,CAAA,CDU0B,MCV9B,EAAjB,cDUH;AFJH,AGR0B,ADa1B,CCbU,CAAf,CHIY,AECR;ACAJ,IAAM,UAAU,GAAgB,QAAQ,CAAC,aAAT,CAAuB,aAAvB,CAAhC;AHII,AEKQ,EFLR,AEKQ,SAAA,CAAA,CFLR,CAAA,OEKQ,CAAA,CFLR,CAAA,IAAA,GAAA,SEKQ,GFLR,AEKA,UAA2B,OAA3B,EAA+D;AFJ3D,AGJR,ADSQ,QAAM,CFLD,CGJH,CAAC,EDSQ,CFLX,CAAW,CEKG,ECTtB,CHIQ,EGJa,EDSQ,CAAC,CAAD,CAArB,OCTa;AHKhB,AGLsB,ADWnB,GFRJ,KEQU,CCXa,MAAM,CAAC,CDWX,GAAC,KAAK,CCXF,ADWG,ECXH,eDWH,IAA2B,KAAK,SAAhD;ACXsC,ADarC,CCbT,GDaS,SAAD,GACM,KAAK,MAAL,CAAY,IAAZ,EADN,GAEM,KAAK,MAAL,CAAY,KAAZ,EAFN;AFPJ,AEUC,EFVD,CEEQ,UFFR,CAAA,SAAA,CAAA,KAAA,GAAA,YAAA;AACI,AGLR,IAAM,KHKO,KAAL,AGLQ,CHKG,EGLa,GHKxB,KGLgC,CAAC,aAAT,CAAuB,aAAvB,CAAhC;AHMK,AESO,EAAA,CFXR,QEWQ,CAAA,SAAA,CAAA,sBAAA,GAAR,YAAA;ACdJ,ADeQ,QAAM,ECfJ,CAAC,KDeW,ECftB,CDeyB,ECfJ,MDeY,CAAC,KCfb,UDeI,KAA6B,SAA9C;AFTJ,AGLF,ADeO,EFVL,EEUK,ECfH,MAAM,ADeJ,CFVJ,AGLS,CHKT,CEWU,GChBR,CAAa,CDgBA,GFXf,CAAA,AGLF,EAAwB,ADgBZ,CAAY,CFXtB,GAAA,AEWU,EADN,GAEM,KAAK,EFZf,IEYU,CAAY,KAAZ,EAFN;AFTA,AGLJ,ADiBC,GALO,CCZR,KHKS,CGLH,CAAC,GHKH,CAAW,EGLf,GHKI,GAAmB,IAAnB;AACH,AGLF,GHGC,AGLF,MAEO;AACL,ADgBJ,IChBI,KDgBJ,CChBU,CAAC,IAAP,GDgBJ;AFXI,AGJD,ADlBH,CAAA,CFsBI,CEtBJ,UFsBI,CAAA,SAAA,CAAA,MAAA,GAAA,YAAA;AACI,AGJP,CAND,QHUa,KAAL,CAAW,KAAX,GAAmB,KAAnB;AACH,AEWL,GFbI,IEaJ,CAAA,OAAA,GAAe,SAAf;ACdA,IAAI,mBAAmB,SAAvB,EAAkC;AHI9B,AGHF,EHGE,AGHF,SAAS,CAAC,CHGR,CAAA,SAAA,CAAA,CGHF,CAAwB,QHGtB,AGHF,CAAiC,EHG/B,YAAA,wBGHF,EAA2C,KAA3C,CAAiD,UAAA,KAAA,EAAK;AHIhD,AGHJ,IAAA,IHGQ,GGHD,CAAC,CHGK,EGHb,CAAY,EHGJ,CAAW,EGHF,CAAC,GHGd,EACI,EGJR,GHIa,KAAL,CAAW,IAAX,GADJ,KAGI,KAAK,KAAL,CAAW,KAAX;AACP,AGNF,GHCC,AGHF;AAGD;AHMG,EAAA,WAAA,CAAA,SAAA,CAAA,UAAA,GAAA,YAAA;AACI,QAAI,KAAK,KAAL,CAAW,KAAf,EACI,KAAK,KAAL,CAAW,KAAX,GAAmB,KAAnB,CADJ,KAGI,KAAK,KAAL,CAAW,KAAX,GAAmB,IAAnB;AACP,GALD;;AAMJ,SAAA,WAAA;AAtCA,CAAA,EAAA;;AAyCA,OAAA,CAAA,OAAA,GAAe,WAAf;AAEa,OAAA,CAAA,GAAA,GAAI,KAAJ","file":"assets.71ddc51b.js","sourceRoot":"..","sourcesContent":["class MediaPlayer {\r\n    media: HTMLMediaElement;\r\n    plugins: Array<any>;\r\n\r\n    constructor(config) {\r\n        this.media = config.el;\r\n        this.plugins = config.plugins || [];\r\n        this.initPlugins();\r\n    }\r\n    private initPlugins() {\r\n        this.plugins.forEach(plugin => {\r\n            plugin.run(this);\r\n        });\r\n    }\r\n    play() {\r\n        this.media.play();\r\n    }\r\n    pause() {\r\n        this.media.pause();\r\n    }\r\n    mute() {\r\n        this.media.muted = true;\r\n    }\r\n    unmute() {\r\n        this.media.muted = false;\r\n    }\r\n    togglePlay() {\r\n        if (this.media.paused)\r\n            this.media.play();\r\n        else\r\n            this.media.pause();\r\n    }\r\n    toggleMute() {\r\n        if (this.media.muted)\r\n            this.media.muted = false;\r\n        else\r\n            this.media.muted = true;\r\n    }\r\n}\r\n\r\n\r\nexport default MediaPlayer;\r\n\r\nexport const foo=\"bar\";","import MediaPlayer from \"../MediaPlayer\";\r\n\r\nfunction AutoPlay() {\r\n    AutoPlay.prototype.run=function(player:MediaPlayer) {\r\n        player.mute();\r\n        player.play();\r\n    };\r\n}\r\n\r\nexport default AutoPlay;","import MediaPlayer from '../MediaPlayer'\r\nclass AutoPause{\r\n    private threshold: number;\r\n    player: MediaPlayer;\r\n\r\n    constructor(){\r\n        this.threshold = 0.25;\r\n        this.handleIntersection = this.handleIntersection.bind(this);\r\n        this.handleVisibilityChange = this.handleVisibilityChange.bind(this);\r\n    }\r\n    run(player){\r\n        this.player = player;\r\n\r\n        const observer = new IntersectionObserver(this.handleIntersection,{\r\n            threshold:this.threshold,\r\n        });\r\n        observer.observe(this.player.media);\r\n        document.addEventListener(\"visibilitychange\",this.handleVisibilityChange);\r\n    }\r\n    private handleIntersection(entries: IntersectionObserverEntry[]){\r\n        const entry = entries[0]\r\n\r\n        const isVisible=entry.intersectionRatio >= this.threshold;\r\n\r\n        (isVisible)\r\n            ? this.player.play()\r\n            : this.player.pause();\r\n    }\r\n    private handleVisibilityChange(){\r\n        const isVisble = document.visibilityState === 'visible';\r\n        (isVisble)\r\n            ? this.player.play()\r\n            : this.player.pause();\r\n    }\r\n}\r\n\r\nexport default AutoPause;","import MediaPlayer from './MediaPlayer'\r\nimport AutoPlay from './plugins/AutoPlay';\r\nimport AutoPause from './plugins/AutoPause';\r\n\r\nconst video = document.querySelector('video');\r\nconst player = new MediaPlayer({\r\n  el: video,\r\n  plugins: [new AutoPlay(), new AutoPause() ],\r\n});\r\n\r\nconst playButton: HTMLElement = document.querySelector('#playButton');\r\nplayButton.onclick = () => player.togglePlay();\r\n\r\nconst muteButton: HTMLElement = document.querySelector('#muteButton');\r\nmuteButton.onclick = () => {\r\n  if (player.media.muted) {\r\n    player.unmute();\r\n  } else {\r\n    player.mute();\r\n  }\r\n};\r\n\r\nif ('serviceWorker' in navigator) {\r\n  navigator.serviceWorker.register('/sw.js').catch(error => {\r\n    console.log(error.message);\r\n  });\r\n}\r\n"]}