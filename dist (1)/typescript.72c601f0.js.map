{"version":3,"sources":["ejercicios/typescript/index.ts"],"names":[],"mappings":"AAAA;;;;;;;AAQA;AACA,IAAI,KAAK,GAAY,IAArB;AACA,KAAK,GAAG,KAAR,EAEA;;AACA,IAAI,GAAG,GAAG,CAAV;AACA,IAAI,SAAS,GAAW,EAAxB;AACA,IAAI,WAAW,GAAW,GAA1B;AACA,IAAI,SAAS,GAAG,SAAS,GAAC,WAA1B,EAEA;;AACA,IAAI,MAAM,GAAW,SAArB;AACA,IAAI,MAAM,GAAE,cAAY,MAAxB,EAEA;;AAEA,IAAI,MAAM,GAAa,EAAvB;AACA,MAAM,GAAG,CAAC,QAAD,EAAU,QAAV,EAAmB,MAAnB,CAAT,EACA;;AACA,MAAM,CAAC,IAAP,CAAY,MAAZ,GAEA;;AAEA,IAAI,iBAAiB,GAAyB,EAA9C;AACA,iBAAiB,CAAC,IAAlB,CAAuB,OAAvB;AACA,iBAAiB,CAAC,IAAlB,CAAuB,EAAvB,GAEA;;AAEA,IAAK,KAAL;;AAAA,CAAA,UAAK,KAAL,EAAU;AACR,EAAA,KAAA,CAAA,MAAA,CAAA,GAAA,MAAA;AACA,EAAA,KAAA,CAAA,OAAA,CAAA,GAAA,OAAA;AACA,EAAA,KAAA,CAAA,MAAA,CAAA,GAAA,MAAA;AACD,CAJD,EAAK,KAAK,KAAL,KAAK,GAAA,EAAA,CAAV;;AAMA,IAAI,aAAa,GAAU,KAAK,CAAC,IAAjC;AACA,OAAO,CAAC,GAAR,CAAY,0BAAwB,aAApC,GAEA;;AAEA,IAAI,OAAO,GAAQ,OAAnB;AACA,OAAO,GAAG;AAAC,EAAA,IAAI,EAAE;AAAP,CAAV,EAEA;;AAEA,IAAI,UAAU,GAAW;AAAC,EAAA,IAAI,EAAE;AAAP,CAAzB,EAEA;;AACA,SAAS,GAAT,CAAa,CAAb,EAAuB,CAAvB,EAA+B;AAC7B,SAAO,CAAC,GAAC,CAAT;AACD;;AAED,IAAM,IAAI,GAAG,GAAG,CAAC,CAAD,EAAG,EAAH,CAAhB,EAEA;;AACA,SAAS,WAAT,CAAqB,CAArB,EAA6B;AAC3B,SAAO,UAAS,CAAT,EAAiB;AACtB,WAAO,CAAC,GAAC,CAAT;AACD,GAFD;AAGD;;AAED,IAAM,OAAO,GAAG,WAAW,CAAC,CAAD,CAA3B;AACA,IAAM,SAAS,GAAG,OAAO,CAAC,CAAD,CAAzB,EAEA;;AACA,SAAS,QAAT,CAAkB,SAAlB,EAAqC,QAArC,EAAqD;AACnD,SAAU,SAAS,GAAA,GAAT,GAAa,QAAvB;AACD;;AAED,IAAM,OAAO,GAAG,QAAQ,CAAC,SAAD,CAAxB,EAEA;;AACA,SAAS,eAAT,CAAyB,SAAzB,EAA4C,QAA5C,EAAqE;AAAzB,MAAA,QAAA,KAAA,KAAA,CAAA,EAAA;AAAA,IAAA,QAAA,GAAA,OAAA;AAAyB;;AACnE,SAAU,SAAS,GAAA,GAAT,GAAa,QAAvB;AACD;;AAED,IAAM,MAAM,GAAG,QAAQ,CAAC,QAAD,CAAvB;AASA,IAAI,IAAI,GAAc;AACpB,EAAA,KAAK,EAAC,CADc;AAEpB,EAAA,IAAI,EAAC;AAFe,CAAtB;;AAKA,SAAS,IAAT,CAAc,CAAd,EAA0B;AACxB,SAAO,CAAC,CAAC,IAAF,GAAS,CAAC,CAAC,KAAlB;AACD;;AAED,IAAM,QAAQ,GAAG,IAAI,CAAC,IAAD,CAArB;AACA,OAAO,CAAC,GAAR,CAAY,QAAZ;AAEA,OAAO,CAAC,GAAR,CAAY,IAAI,CAAC,QAAL,EAAZ","file":"typescript.72c601f0.js","sourceRoot":"..","sourcesContent":["/* console.log('Hello, TypeScript')\r\n\r\nfunction add(a:number, b:number){\r\n  return a+b;\r\n}\r\n\r\nconst sum=add(5,8); */\r\n\r\n//Boolean \r\nlet muted: boolean = true;\r\nmuted = false;\r\n\r\n//NÃºmeros\r\nlet age = 6;\r\nlet numerador: number = 42;\r\nlet denominador: number = age;\r\nlet resultado = numerador/denominador;\r\n\r\n//String\r\nlet nombre: string = 'Richard';\r\nlet saludo =`Me llamo ${nombre}`;\r\n\r\n//Arreglos\r\n\r\nlet people: string[] = [];\r\npeople = ['Isabel','Nicole','Raul'];\r\n//people.push(9000)  --- esto seria un error por el tipo de elemento ingresado\r\npeople.push('9000');\r\n\r\n//Arreglos combinados\r\n\r\nlet peoplesandnumbers: Array<string|number> = [];\r\npeoplesandnumbers.push('Diego')\r\npeoplesandnumbers.push(28)\r\n\r\n//Enum\r\n\r\nenum Color{\r\n  Rojo = 'Rojo',\r\n  verde = 'Verde',\r\n  Azul = 'Azul'\r\n}\r\n\r\nlet colorFavorito: Color = Color.Azul;\r\nconsole.log(`mi Color favorito es ${colorFavorito}`);\r\n\r\n//Any\r\n\r\nlet comodin: any = \"Joker\"\r\ncomodin = {type: \"Wildcard\"};\r\n\r\n//Object\r\n\r\nlet someObject: Object = {type: 'Wildcard'};\r\n\r\n//Funciones \r\nfunction add(a:number, b:number): number{\r\n  return a+b;\r\n}\r\n\r\nconst suma = add(5,25)\r\n\r\n//\r\nfunction createAdder(a:number):(number)=>number{\r\n  return function(b:number){\r\n    return a+b;\r\n  }\r\n}\r\n\r\nconst addFour = createAdder(4);\r\nconst fourPlus6 = addFour(6);\r\n\r\n//valor no requerida\r\nfunction fullName(firstName: string, lastName?:string):string{\r\n  return `${firstName} ${lastName}`;\r\n}\r\n\r\nconst richard = fullName('Richard');\r\n\r\n//valor por defecto\r\nfunction fullNameDefault(firstName: string, lastName:string = 'Smith'):string{\r\n  return `${firstName} ${lastName}`;\r\n}\r\n\r\nconst agente = fullName('Agente');\r\n\r\n//Intarface\r\n\r\ninterface Rectangulo{\r\n  ancho:number;\r\n  alto:number;\r\n}\r\n\r\nlet rect: Rectangulo ={\r\n  ancho:4,\r\n  alto:6,\r\n}\r\n\r\nfunction area(r:Rectangulo){\r\n  return r.alto * r.ancho;\r\n}\r\n\r\nconst areaRect = area(rect);\r\nconsole.log(areaRect);\r\n\r\nconsole.log(rect.toString());\r\n\r\n"]}